$date
	Sat Jul 27 19:19:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sum4b_tb $end
$scope module uut $end
$var wire 4 ! A [3:0] $end
$var wire 4 " B [3:0] $end
$var wire 1 # Ci $end
$var wire 4 $ S [3:0] $end
$var wire 1 % Co $end
$var wire 1 & C3 $end
$var wire 1 ' C2 $end
$var wire 1 ( C1 $end
$scope module sum0 $end
$var wire 1 ) a $end
$var wire 1 * and1 $end
$var wire 1 + and2 $end
$var wire 1 , b $end
$var wire 1 - ci $end
$var wire 1 ( co $end
$var wire 1 . s $end
$var wire 1 / xor1 $end
$upscope $end
$scope module sum1 $end
$var wire 1 0 a $end
$var wire 1 1 and1 $end
$var wire 1 2 and2 $end
$var wire 1 3 b $end
$var wire 1 ( ci $end
$var wire 1 ' co $end
$var wire 1 4 s $end
$var wire 1 5 xor1 $end
$upscope $end
$scope module sum2 $end
$var wire 1 6 a $end
$var wire 1 7 and1 $end
$var wire 1 8 and2 $end
$var wire 1 9 b $end
$var wire 1 ' ci $end
$var wire 1 & co $end
$var wire 1 : s $end
$var wire 1 ; xor1 $end
$upscope $end
$scope module sum3 $end
$var wire 1 < a $end
$var wire 1 = and1 $end
$var wire 1 > and2 $end
$var wire 1 ? b $end
$var wire 1 & ci $end
$var wire 1 % co $end
$var wire 1 @ s $end
$var wire 1 A xor1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
1.
1-
0,
0+
0*
0)
0(
0'
0&
0%
b1 $
0#
b0 "
b0 !
$end
#100
b11 $
14
1(
1+
1,
1)
b1 "
b1 !
#200
04
b101 $
1:
0(
1'
0+
12
0,
13
0)
10
b10 "
b10 !
#300
b111 $
14
1(
1+
1,
1)
b11 "
b11 !
1#
#400
04
0:
b1001 $
1@
0(
0'
1&
0+
02
18
0,
03
19
0)
00
16
b100 "
b100 !
#500
b1011 $
14
1(
1+
1,
1)
b101 "
b101 !
0#
#600
04
b1101 $
1:
0(
1'
0+
12
0,
13
0)
10
b110 "
b110 !
#700
b1111 $
14
1(
1+
1,
1)
b111 "
b111 !
1#
#800
04
0:
b1 $
0@
0(
0'
0&
1%
0+
02
08
1>
0,
03
09
1?
0)
00
06
1<
b1000 "
b1000 !
#900
b11 $
14
1(
1+
1,
1)
b1001 "
b1001 !
0#
#1000
04
b101 $
1:
0(
1'
0+
12
0,
13
0)
10
b1010 "
b1010 !
#1100
b111 $
14
1(
1+
1,
1)
b1011 "
b1011 !
1#
#1200
04
0:
b1001 $
1@
0(
0'
1&
0+
02
18
0,
03
19
0)
00
16
b1100 "
b1100 !
#1300
b1011 $
14
1(
1+
1,
1)
b1101 "
b1101 !
0#
#1400
04
b1101 $
1:
0(
1'
0+
12
0,
13
0)
10
b1110 "
b1110 !
#1500
b1111 $
14
1(
1+
1,
1)
b1111 "
b1111 !
1#
#1600
